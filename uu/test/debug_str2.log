out torch.Size([1, 1, 4, 4])

&&&&&&&&&&&&&&&&&&& OUR forward &&&&&&&&&&&&&&&&&&&

!!!!!!! 1 1 4 4
++++++++++++++++++++++++++++++++++++++++++++++++
coord [0, 0]
AA 8 8
BB ph 1, none_tiled_input_shape (1, 1, 8, 8)
tile_top 0 3 0 3
shf_tile_top 1 4 1 4
Oh, Ow 8 8
<class 'int'> 0 [0]
<class 'int'> 2 [2, 3, 4]
<class 'int'> 0 [0]
<class 'int'> 2 [2, 3, 4]
H_cover 0 0 [0, 2] [0, 2]
out_tile_top 0 1
--input_slice [0, 3, 0, 3]
--real_index [-1, 4, -1, 4]
--padding_info [1, 2, 1, 2]
--internal_expand [0, 0, 0, 0]
bwd_out_shape  (4, 4)
fwd_out_shape  (2, 2)
------------------------------
f_info {-11: fake[-11,-11]
 PI( <0,0,>,
 <otileshape 4,4,>,
 <padding >,
 <inpslidx 0,3,0,3,>, 
 <internal >, 
 <realidx 0,3,0,3,>, 
 <ndtsize >, 
  local_first False
 next_id -11
 numof tiles 2,2, ) 
, 140671083176240: conv2d140671083176240[0,0]
 PI( <0,0,>,
 <otileshape 4,4,>,
 <padding 1,1,1,1,>,
 <inpslidx 0,7,0,7,>, 
 <internal 0,0,0,0,>, 
 <realidx -1,4,-1,4,>, 
 <ndtsize 2,2,>, 
  local_first True
 next_id -99
 numof tiles 2,2, ) 
}
------------------------------
b_info {-11: fake-grad-IN[-11,-11]
 PI( <0,0,>,
 <otileshape 4,4,>,
 <padding >,
 <inpslidx 0,3,0,3,>, 
 <internal >, 
 <realidx 0,3,0,3,>, 
 <ndtsize >, 
  local_first False
 next_id -101
 numof tiles 2,2, ) 
, 140671083176240: bk-conv2d140671083176240[0,0]
 PI( <0,0,>,
 <otileshape 4,4,>,
 <padding 1,2,1,2,>,
 <inpslidx 0,3,0,3,>, 
 <internal 0,0,0,0,>, 
 <realidx -1,4,-1,4,>, 
 <ndtsize >, 
  local_first False
 next_id -99
 numof tiles 2,2, ) 
}
current input size torch.Size([1, 1, 8, 8]) (2, 2)
after padding input size torch.Size([1, 1, 10, 10])
shape input_tile_for_next
 torch.Size([1, 1, 4, 4])
net_ out
 torch.Size([1, 1, 4, 4]) tensor([[[[-0.0295,  0.1033,  0.0722,  0.2377],
          [ 0.0129,  0.0659,  0.0709,  0.0704],
          [-0.2752, -0.1303,  0.1376,  0.2443],
          [-0.2248,  0.0549,  0.2279,  0.1918]]]], device='cuda:0')
corp output (4, 4) [4, 4] [0, 3, 0, 3]
coord [0, 3, 0, 3]
out_temp torch.Size([1, 1, 4, 4]) torch.Size([1, 1, 4, 4])
++++++++++++++++++++++++++++++++++++++++++++++++
coord [0, 1]
AA 8 8
BB ph 1, none_tiled_input_shape (1, 1, 8, 8)
tile_top 0 3 4 7
shf_tile_top 1 4 5 8
Oh, Ow 8 8
<class 'int'> 0 [0]
<class 'int'> 2 [2, 3, 4]
<class 'int'> 2 [2, 3, 4]
<class 'int'> 6 [6, 7, 8]
H_cover 0 4 [0, 2] [1, 4]
out_tile_top 0 1
--input_slice [3, 3, 0, 3]
--real_index [3, 8, -1, 4]
--padding_info [0, 2, 1, 2]
--internal_expand [1, 0, 0, 0]
bwd_out_shape  (1, 4)
fwd_out_shape  (2, 2)
------------------------------
f_info {-11: fake[-11,-11]
 PI( <0,1,>,
 <otileshape 1,4,>,
 <padding >,
 <inpslidx 3,3,0,3,>, 
 <internal >, 
 <realidx 3,3,0,3,>, 
 <ndtsize >, 
  local_first False
 next_id -11
 numof tiles 2,2, ) 
, 140671083176240: conv2d140671083176240[0,0]
 PI( <0,1,>,
 <otileshape 1,4,>,
 <padding 0,1,1,1,>,
 <inpslidx 5,7,0,7,>, 
 <internal 1,0,0,0,>, 
 <realidx 2,4,-1,4,>, 
 <ndtsize 2,2,>, 
  local_first True
 next_id -99
 numof tiles 2,2, ) 
}
------------------------------
b_info {-11: fake-grad-IN[-11,-11]
 PI( <0,1,>,
 <otileshape 4,4,>,
 <padding >,
 <inpslidx 4,7,0,3,>, 
 <internal >, 
 <realidx 4,7,0,3,>, 
 <ndtsize >, 
  local_first False
 next_id -101
 numof tiles 2,2, ) 
, 140671083176240: bk-conv2d140671083176240[0,0]
 PI( <0,1,>,
 <otileshape 1,4,>,
 <padding 0,2,1,2,>,
 <inpslidx 3,3,0,3,>, 
 <internal 1,0,0,0,>, 
 <realidx 3,8,-1,4,>, 
 <ndtsize >, 
  local_first False
 next_id -99
 numof tiles 2,2, ) 
}
current input size torch.Size([1, 1, 8, 3]) (2, 2)
after padding input size torch.Size([1, 1, 10, 4])
shape input_tile_for_next
 torch.Size([1, 1, 4, 1])
net_ out
 torch.Size([1, 1, 4, 1]) tensor([[[[0.2377],
          [0.0704],
          [0.2443],
          [0.1918]]]], device='cuda:0')
corp output (1, 4) [1, 4] [3, 3, 0, 3]
coord [3, 3, 0, 3]
out_temp torch.Size([1, 1, 4, 1]) torch.Size([1, 1, 4, 4])
++++++++++++++++++++++++++++++++++++++++++++++++
coord [1, 0]
AA 8 8
BB ph 1, none_tiled_input_shape (1, 1, 8, 8)
tile_top 4 7 0 3
shf_tile_top 5 8 1 4
Oh, Ow 8 8
<class 'int'> 2 [2, 3, 4]
<class 'int'> 6 [6, 7, 8]
<class 'int'> 0 [0]
<class 'int'> 2 [2, 3, 4]
H_cover 4 0 [1, 4] [0, 2]
out_tile_top 2 3
--input_slice [0, 3, 3, 3]
--real_index [-1, 4, 3, 8]
--padding_info [1, 2, 0, 2]
--internal_expand [0, 0, 1, 0]
bwd_out_shape  (4, 1)
fwd_out_shape  (2, 2)
------------------------------
f_info {-11: fake[-11,-11]
 PI( <1,0,>,
 <otileshape 4,1,>,
 <padding >,
 <inpslidx 0,3,3,3,>, 
 <internal >, 
 <realidx 0,3,3,3,>, 
 <ndtsize >, 
  local_first False
 next_id -11
 numof tiles 2,2, ) 
, 140671083176240: conv2d140671083176240[0,0]
 PI( <1,0,>,
 <otileshape 4,1,>,
 <padding 1,1,0,1,>,
 <inpslidx 0,7,5,7,>, 
 <internal 0,0,1,0,>, 
 <realidx -1,4,2,4,>, 
 <ndtsize 2,2,>, 
  local_first True
 next_id -99
 numof tiles 2,2, ) 
}
------------------------------
b_info {-11: fake-grad-IN[-11,-11]
 PI( <1,0,>,
 <otileshape 4,4,>,
 <padding >,
 <inpslidx 0,3,4,7,>, 
 <internal >, 
 <realidx 0,3,4,7,>, 
 <ndtsize >, 
  local_first False
 next_id -101
 numof tiles 2,2, ) 
, 140671083176240: bk-conv2d140671083176240[0,0]
 PI( <1,0,>,
 <otileshape 4,1,>,
 <padding 1,2,0,2,>,
 <inpslidx 0,3,3,3,>, 
 <internal 0,0,1,0,>, 
 <realidx -1,4,3,8,>, 
 <ndtsize >, 
  local_first False
 next_id -99
 numof tiles 2,2, ) 
}
current input size torch.Size([1, 1, 3, 8]) (2, 2)
after padding input size torch.Size([1, 1, 4, 10])
shape input_tile_for_next
 torch.Size([1, 1, 1, 4])
net_ out
 torch.Size([1, 1, 1, 4]) tensor([[[[-0.2248,  0.0549,  0.2279,  0.1918]]]], device='cuda:0')
corp output (4, 1) [4, 1] [0, 3, 3, 3]
coord [0, 3, 3, 3]
out_temp torch.Size([1, 1, 1, 4]) torch.Size([1, 1, 4, 4])
++++++++++++++++++++++++++++++++++++++++++++++++
coord [1, 1]
AA 8 8
BB ph 1, none_tiled_input_shape (1, 1, 8, 8)
tile_top 4 7 4 7
shf_tile_top 5 8 5 8
Oh, Ow 8 8
<class 'int'> 2 [2, 3, 4]
<class 'int'> 6 [6, 7, 8]
<class 'int'> 2 [2, 3, 4]
<class 'int'> 6 [6, 7, 8]
H_cover 4 4 [1, 4] [1, 4]
out_tile_top 2 3
--input_slice [3, 3, 3, 3]
--real_index [3, 8, 3, 8]
--padding_info [0, 2, 0, 2]
--internal_expand [1, 0, 1, 0]
bwd_out_shape  (1, 1)
fwd_out_shape  (2, 2)
------------------------------
f_info {-11: fake[-11,-11]
 PI( <1,1,>,
 <otileshape 1,1,>,
 <padding >,
 <inpslidx 3,3,3,3,>, 
 <internal >, 
 <realidx 3,3,3,3,>, 
 <ndtsize >, 
  local_first False
 next_id -11
 numof tiles 2,2, ) 
, 140671083176240: conv2d140671083176240[0,0]
 PI( <1,1,>,
 <otileshape 1,1,>,
 <padding 0,1,0,1,>,
 <inpslidx 5,7,5,7,>, 
 <internal 1,0,1,0,>, 
 <realidx 2,4,2,4,>, 
 <ndtsize 2,2,>, 
  local_first True
 next_id -99
 numof tiles 2,2, ) 
}
------------------------------
b_info {-11: fake-grad-IN[-11,-11]
 PI( <1,1,>,
 <otileshape 4,4,>,
 <padding >,
 <inpslidx 4,7,4,7,>, 
 <internal >, 
 <realidx 4,7,4,7,>, 
 <ndtsize >, 
  local_first False
 next_id -101
 numof tiles 2,2, ) 
, 140671083176240: bk-conv2d140671083176240[0,0]
 PI( <1,1,>,
 <otileshape 1,1,>,
 <padding 0,2,0,2,>,
 <inpslidx 3,3,3,3,>, 
 <internal 1,0,1,0,>, 
 <realidx 3,8,3,8,>, 
 <ndtsize >, 
  local_first False
 next_id -99
 numof tiles 2,2, ) 
}
current input size torch.Size([1, 1, 3, 3]) (2, 2)
after padding input size torch.Size([1, 1, 4, 4])
shape input_tile_for_next
 torch.Size([1, 1, 1, 1])
net_ out
 torch.Size([1, 1, 1, 1]) tensor([[[[0.1918]]]], device='cuda:0')
corp output (1, 1) [1, 1] [3, 3, 3, 3]
coord [3, 3, 3, 3]
out_temp torch.Size([1, 1, 1, 1]) torch.Size([1, 1, 4, 4])

&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&

~~ check forward correctness ~~
-----------------------------------------

tensor([[[[-0.0295,  0.1033,  0.0722,  0.2377],
          [ 0.0129,  0.0659,  0.0709,  0.0704],
          [-0.2752, -0.1303,  0.1376,  0.2443],
          [-0.2248,  0.0549,  0.2279,  0.1918]]]], device='cuda:0',
       grad_fn=<BackwardHookFunctionBackward>) tensor([[[[-0.0295,  0.1033,  0.0722,  0.2377],
          [ 0.0129,  0.0659,  0.0709,  0.0704],
          [-0.2752, -0.1303,  0.1376,  0.2443],
          [-0.2248,  0.0549,  0.2279,  0.1918]]]], device='cuda:0',
       grad_fn=<TiledCopyFunctionBackward>)
